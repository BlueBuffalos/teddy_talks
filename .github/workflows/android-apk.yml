name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'android/**'
      - 'lib/**'
      - 'pubspec.yaml'
      - '.github/workflows/android-apk.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PICOVOICE_ACCESS_KEY: ${{ secrets.PICOVOICE_ACCESS_KEY }}
      HEY_TEDDY_PPN_BASE64: ${{ secrets.HEY_TEDDY_PPN_BASE64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        env:
          SKIP_JDK_VERSION_CHECK: true

      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "cmdline-tools;latest" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure Gradle wrapper is executable (Linux)
        run: |
          chmod +x android/gradlew || true

      - name: Write android/local.properties
        run: |
          FLUTTER_BIN=$(which flutter)
          FLUTTER_ROOT=$(dirname "$(dirname "${FLUTTER_BIN}")")
          echo "flutter bin: $FLUTTER_BIN"
          echo "flutter root: $FLUTTER_ROOT"
          echo "android sdk: $ANDROID_SDK_ROOT"
          cat > android/local.properties <<EOF
          flutter.sdk=$FLUTTER_ROOT
          sdk.dir=$ANDROID_SDK_ROOT
          EOF
          echo "--- android/local.properties ---"
          cat android/local.properties

      - name: Flutter analyze (non-blocking)
        run: |
          set -o pipefail
          flutter analyze | tee analyze_log.txt || true

      - name: Environment sanity (versions)
        run: |
          echo "JAVA:" && java -version
          echo "FLUTTER:" && flutter --version
          echo "ANDROID SDK DIR: $ANDROID_SDK_ROOT"
          echo "SDK packages (head):" && sdkmanager --list | head -n 50 || true
          echo "DOCTOR:" && flutter doctor -v || true
          echo "Secret presence (lengths only):"
          echo "  OPENAI_API_KEY length: ${#OPENAI_API_KEY}"
          echo "  PICOVOICE_ACCESS_KEY length: ${#PICOVOICE_ACCESS_KEY}"

      - name: Decode Porcupine model from secret (optional)
        if: env.HEY_TEDDY_PPN_BASE64 != ''
        run: |
          mkdir -p assets/wake
          printf "%s" "$HEY_TEDDY_PPN_BASE64" | base64 -d > assets/wake/hey_teddy.ppn

      - name: Ensure Porcupine model exists
        run: |
          if [ ! -f assets/wake/hey_teddy.ppn ]; then
            echo "Missing assets/wake/hey_teddy.ppn. Commit the file or set HEY_TEDDY_PPN_BASE64 secret." >&2
            exit 1
          fi
          echo "PPN size (bytes):" $(wc -c < assets/wake/hey_teddy.ppn)
          file assets/wake/hey_teddy.ppn || true

      - name: Build APK (debug, verbose)
        run: |
          set -o pipefail
          echo "Running flutter build apk with defines"
          flutter build apk --debug -v -t lib/main.dart \
            --dart-define=OPENAI_API_KEY="${OPENAI_API_KEY}" \
            --dart-define=PICOVOICE_ACCESS_KEY="${PICOVOICE_ACCESS_KEY}" \
            --dart-define=OPENAI_MODEL="gpt-3.5-turbo" 2>&1 | tee build_log.txt

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: teddy-talks-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error

      - name: Gradle stacktrace on failure (fallback)
        if: failure()
        run: |
          echo "===== Running Gradle directly with --stacktrace --info ====="
          (cd android && chmod +x gradlew && ./gradlew app:assembleDebug --stacktrace --info --warning-mode all) 2>&1 | tee gradle_stacktrace.log || true
          echo "===== android dir list ====="
          ls -la android || true
          echo "===== show local.properties ====="
          cat android/local.properties || true

      - name: Upload gradle stacktrace (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-stacktrace-log
          path: gradle_stacktrace.log

      - name: Upload Flutter logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-logs
          path: |
            build_log.txt
            analyze_log.txt

      - name: Print gradle stacktrace (on failure)
        if: failure()
        run: |
          echo "===== Head gradle_stacktrace.log =====" && head -n 200 gradle_stacktrace.log || true
          echo "===== Tail gradle_stacktrace.log =====" && tail -n 200 gradle_stacktrace.log || true

      - name: Print last 200 lines of build log (on failure)
        if: failure()
        run: |
          echo "===== Tail of flutter build log ====="
          tail -n 400 build_log.txt || true
          echo "===== Head of flutter build log ====="
          head -n 400 build_log.txt || true
          echo "===== Likely error lines (grep) ====="
          grep -n -E "(FAILURE:|\* What went wrong:|A problem occurred|Caused by:|Exception:|Error:|error:|^lib/.+:\d+:|^/.+\.dart:\d+:)" build_log.txt | tail -n 400 || true
